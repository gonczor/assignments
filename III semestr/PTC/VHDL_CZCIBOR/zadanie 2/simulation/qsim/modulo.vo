// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "01/18/2017 02:13:42"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module D_vhdl (
	KEY,
	LEDR);
input 	[0:0] KEY;
output 	[3:0] LEDR;

// Design Ports Information
// LEDR[0]	=>  Location: PIN_B12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// LEDR[1]	=>  Location: PIN_C12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// LEDR[2]	=>  Location: PIN_C11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// LEDR[3]	=>  Location: PIN_B11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// KEY[0]	=>  Location: PIN_C13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("modulo_v.sdo");
// synopsys translate_on

wire \DFF1|Q~0_combout ;
wire \DFF2|Q~0_combout ;
wire \DFF2|Q~regout ;
wire \DFF4|Q~0_combout ;
wire \DFF4|Q~regout ;
wire \DFF3|Q~0_combout ;
wire \DFF3|Q~regout ;
wire \comb~0_combout ;
wire \DFF1|Q~regout ;
wire [0:0] \KEY~combout ;


// Location: PIN_C13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cycloneii_io \KEY[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\KEY~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(KEY[0]));
// synopsys translate_off
defparam \KEY[0]~I .input_async_reset = "none";
defparam \KEY[0]~I .input_power_up = "low";
defparam \KEY[0]~I .input_register_mode = "none";
defparam \KEY[0]~I .input_sync_reset = "none";
defparam \KEY[0]~I .oe_async_reset = "none";
defparam \KEY[0]~I .oe_power_up = "low";
defparam \KEY[0]~I .oe_register_mode = "none";
defparam \KEY[0]~I .oe_sync_reset = "none";
defparam \KEY[0]~I .operation_mode = "input";
defparam \KEY[0]~I .output_async_reset = "none";
defparam \KEY[0]~I .output_power_up = "low";
defparam \KEY[0]~I .output_register_mode = "none";
defparam \KEY[0]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: LCCOMB_X30_Y35_N14
cycloneii_lcell_comb \DFF1|Q~0 (
// Equation(s):
// \DFF1|Q~0_combout  = !\DFF1|Q~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\DFF1|Q~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\DFF1|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \DFF1|Q~0 .lut_mask = 16'h0F0F;
defparam \DFF1|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X30_Y35_N30
cycloneii_lcell_comb \DFF2|Q~0 (
// Equation(s):
// \DFF2|Q~0_combout  = !\DFF2|Q~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\DFF2|Q~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\DFF2|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \DFF2|Q~0 .lut_mask = 16'h0F0F;
defparam \DFF2|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X30_Y35_N31
cycloneii_lcell_ff \DFF2|Q (
	.clk(!\DFF1|Q~regout ),
	.datain(\DFF2|Q~0_combout ),
	.sdata(gnd),
	.aclr(\comb~0_combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\DFF2|Q~regout ));

// Location: LCCOMB_X29_Y35_N30
cycloneii_lcell_comb \DFF4|Q~0 (
// Equation(s):
// \DFF4|Q~0_combout  = !\DFF4|Q~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\DFF4|Q~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\DFF4|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \DFF4|Q~0 .lut_mask = 16'h0F0F;
defparam \DFF4|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X29_Y35_N31
cycloneii_lcell_ff \DFF4|Q (
	.clk(!\DFF3|Q~regout ),
	.datain(\DFF4|Q~0_combout ),
	.sdata(gnd),
	.aclr(\comb~0_combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\DFF4|Q~regout ));

// Location: LCCOMB_X29_Y35_N18
cycloneii_lcell_comb \DFF3|Q~0 (
// Equation(s):
// \DFF3|Q~0_combout  = !\DFF3|Q~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\DFF3|Q~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\DFF3|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \DFF3|Q~0 .lut_mask = 16'h0F0F;
defparam \DFF3|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X29_Y35_N19
cycloneii_lcell_ff \DFF3|Q (
	.clk(!\DFF2|Q~regout ),
	.datain(\DFF3|Q~0_combout ),
	.sdata(gnd),
	.aclr(\comb~0_combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\DFF3|Q~regout ));

// Location: LCCOMB_X30_Y35_N6
cycloneii_lcell_comb \comb~0 (
// Equation(s):
// \comb~0_combout  = (!\DFF1|Q~regout  & (\DFF2|Q~regout  & (\DFF4|Q~regout  & !\DFF3|Q~regout )))

	.dataa(\DFF1|Q~regout ),
	.datab(\DFF2|Q~regout ),
	.datac(\DFF4|Q~regout ),
	.datad(\DFF3|Q~regout ),
	.cin(gnd),
	.combout(\comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb~0 .lut_mask = 16'h0040;
defparam \comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X30_Y35_N15
cycloneii_lcell_ff \DFF1|Q (
	.clk(\KEY~combout [0]),
	.datain(\DFF1|Q~0_combout ),
	.sdata(gnd),
	.aclr(\comb~0_combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\DFF1|Q~regout ));

// Location: PIN_B12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \LEDR[0]~I (
	.datain(\DFF1|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[0]));
// synopsys translate_off
defparam \LEDR[0]~I .input_async_reset = "none";
defparam \LEDR[0]~I .input_power_up = "low";
defparam \LEDR[0]~I .input_register_mode = "none";
defparam \LEDR[0]~I .input_sync_reset = "none";
defparam \LEDR[0]~I .oe_async_reset = "none";
defparam \LEDR[0]~I .oe_power_up = "low";
defparam \LEDR[0]~I .oe_register_mode = "none";
defparam \LEDR[0]~I .oe_sync_reset = "none";
defparam \LEDR[0]~I .operation_mode = "output";
defparam \LEDR[0]~I .output_async_reset = "none";
defparam \LEDR[0]~I .output_power_up = "low";
defparam \LEDR[0]~I .output_register_mode = "none";
defparam \LEDR[0]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_C12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \LEDR[1]~I (
	.datain(\DFF2|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[1]));
// synopsys translate_off
defparam \LEDR[1]~I .input_async_reset = "none";
defparam \LEDR[1]~I .input_power_up = "low";
defparam \LEDR[1]~I .input_register_mode = "none";
defparam \LEDR[1]~I .input_sync_reset = "none";
defparam \LEDR[1]~I .oe_async_reset = "none";
defparam \LEDR[1]~I .oe_power_up = "low";
defparam \LEDR[1]~I .oe_register_mode = "none";
defparam \LEDR[1]~I .oe_sync_reset = "none";
defparam \LEDR[1]~I .operation_mode = "output";
defparam \LEDR[1]~I .output_async_reset = "none";
defparam \LEDR[1]~I .output_power_up = "low";
defparam \LEDR[1]~I .output_register_mode = "none";
defparam \LEDR[1]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_C11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \LEDR[2]~I (
	.datain(\DFF3|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[2]));
// synopsys translate_off
defparam \LEDR[2]~I .input_async_reset = "none";
defparam \LEDR[2]~I .input_power_up = "low";
defparam \LEDR[2]~I .input_register_mode = "none";
defparam \LEDR[2]~I .input_sync_reset = "none";
defparam \LEDR[2]~I .oe_async_reset = "none";
defparam \LEDR[2]~I .oe_power_up = "low";
defparam \LEDR[2]~I .oe_register_mode = "none";
defparam \LEDR[2]~I .oe_sync_reset = "none";
defparam \LEDR[2]~I .operation_mode = "output";
defparam \LEDR[2]~I .output_async_reset = "none";
defparam \LEDR[2]~I .output_power_up = "low";
defparam \LEDR[2]~I .output_register_mode = "none";
defparam \LEDR[2]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_B11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \LEDR[3]~I (
	.datain(\DFF4|Q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(LEDR[3]));
// synopsys translate_off
defparam \LEDR[3]~I .input_async_reset = "none";
defparam \LEDR[3]~I .input_power_up = "low";
defparam \LEDR[3]~I .input_register_mode = "none";
defparam \LEDR[3]~I .input_sync_reset = "none";
defparam \LEDR[3]~I .oe_async_reset = "none";
defparam \LEDR[3]~I .oe_power_up = "low";
defparam \LEDR[3]~I .oe_register_mode = "none";
defparam \LEDR[3]~I .oe_sync_reset = "none";
defparam \LEDR[3]~I .operation_mode = "output";
defparam \LEDR[3]~I .output_async_reset = "none";
defparam \LEDR[3]~I .output_power_up = "low";
defparam \LEDR[3]~I .output_register_mode = "none";
defparam \LEDR[3]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
